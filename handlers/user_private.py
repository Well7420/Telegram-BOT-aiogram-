from aiogram import F, types, Router
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.filters import CommandStart, Command
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from keyboards import reply

UP_Router = Router()

class Order(StatesGroup): # –∫–ª–∞—Å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    name = State()
    pizza = State()
    number = State()


@UP_Router.message(F.text.lower() == '–ø—Ä–∏–≤—ñ—Ç') # –ü–æ—á–∞—Ç–æ–∫ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –±–æ—Ç–æ–º
@UP_Router.message(CommandStart())
async def start_cmd(message: types.Message):
    await message.answer('–ü—Ä–∏–≤—ñ—Ç, —è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫!\n–ß–∏–º —è –º–æ–∂—É –í–∞–º –¥–æ–ø–æ–º–æ–≥—Ç–∏?üòä', 
                                                                    reply_markup=reply.start_kb)


@UP_Router.message(F.text.lower().contains('–º–µ–Ω—é')) # –§—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫—É –º–µ–Ω—é –∑–∞–∫–ª–∞–¥—É
@UP_Router.message(Command('menu'))
async def menu_cmd(message: types.Message):
    await message.answer_photo(photo='https://ibb.co/qJh6Pcd', caption='–û—Å—å –Ω–∞—à–µ –º–µ–Ω—éüëÄ')


@UP_Router.message(F.text.lower().contains('–∞–¥—Ä–µ—Å')) # –§—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —â–æ–¥–æ –∞–¥—Ä–µ—Å–∏ –∑–∞–∫–ª–∞–¥—É
@UP_Router.message(Command('about'))
async def about_cmd(message: types.Message):
    await message.answer('–ó —Ä–∞–¥—ñ—Å—Ç—é –ø—ñ–¥–∫–∞–∂—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —â–æ–¥–æ –∑–∞–∫–ª–∞–¥—ñ–≤ü§ó')
    await message.answer('üìç–ê–¥—Ä–µ—Å–∞: –ø—Ä–æ—Å–ø–µ–∫—Ç –°—Ç–µ–ø–∞–Ω–∞ –ë–∞–Ω–¥–µ—Ä–∏ 7\n\n‚åö–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏: –ø—Ä–∞—Ü—é—î–º–æ –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è –∑ 08:00 –¥–æ 23:00\n\nüì≤–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: 0445103070')


@UP_Router.message(F.text.lower().contains('–æ–ø–ª–∞—Ç')) # –§—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —â–æ–¥–æ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ –æ–ø–ª–∞—Ç–∏
@UP_Router.message(Command('payment'))
async def payment_cmd(message: types.Message):
    await message.answer('–í–∞—Ä—ñ–∞–Ω—Ç–∏ –æ–ø–ª–∞—Ç–∏: ')


@UP_Router.message(F.text.lower().contains('–¥–æ—Å—Ç–∞–≤–∫')) # –§—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —â–æ–¥–æ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏
@UP_Router.message(Command('delivery'))
async def delivery_cmd(message: types.Message):
    await message.answer('–í–∞—Ä—ñ–∞–Ω—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏: ')


@UP_Router.message(F.text.lower().contains('—Å—Ç–∞—Ç—É—Å')) # –§—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —â–æ–¥–æ —Å—Ç–∞—Ç—É—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
@UP_Router.message(Command('status'))
async def status_cmd(message: types.Message):
    await message.answer('–°—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')


@UP_Router.callback_query(F.data == 'yes') # –§—É–Ω–∫—Ü—ñ—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
async def yes(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–î—è–∫—É—î–º–æ –∑–∞ –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!üòäüçï', reply_markup=reply.start_kb)


@UP_Router.callback_query(F.data == 'no') # –§—É–Ω–∫—Ü—ñ—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
async def no(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–ë—É–¥—å –ª–∞—Å–∫–∞, —Å—Ç–≤–æ—Ä—ñ—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–Ω–æ.', 
                                                                    reply_markup=reply.start_kb)


@UP_Router.message(F.text.lower().contains('—Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')) # –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
@UP_Router.message(Command('order'))
async def order_cmd(message: Message, state: FSMContext):
    await state.set_state(Order.name)
    await message.answer('–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –í–∞—à–µ —ñ–º\'—è')


@UP_Router.message(Order.name)
async def order_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(Order.pizza)
    await message.answer('–Ø–∫—É –ø—ñ—Ü—É –æ–±—Ä–∞–ª–∏?üòãüçï')


@UP_Router.message(Order.pizza)
async def order_pizza(message: Message, state: FSMContext):
    await state.update_data(pizza=message.text)
    await state.set_state(Order.number)
    await message.answer('–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', 
                                                                    reply_markup=reply.get_number)


@UP_Router.message(Order.number, F.contact)
async def order_number(message: Message, state: FSMContext):
    await state.update_data(number=message.contact.phone_number)
    data = await state.get_data()
    await message.answer(f'ü™™–í–∞—à–µ —ñ–º\'—è: {data["name"]}\nüçï–û–±—Ä–∞–Ω–∞ –ø—ñ—Ü–∞: {data["pizza"]}\nüì≤–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {data["number"]}\n\n–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω–æ –≤—ñ—Ä–Ω–æ?',
                                                                    reply_markup=reply.order_kb)
    await state.clear()